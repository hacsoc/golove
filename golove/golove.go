/*
A command-line application for sending love. Usage is as follows:

	golove recipient[,recipient...] message

The message may be multiple command line arguments - they will be joined into a
single string with a space separator.

In order for this program to work, the following environment variables must be
set. LOVE_API_KEY must contain a valid API key. API keys may be generated by
administrators on their love instance. Select "API Keys" from the Admin
dropdown, type a description, and hit "Add".

LOVE_BASE_URL must be set to the base URL of the love API. This should include
the "api" part of the URL, but not the trailing slash. For example:
https://cwrulove.appspot.com/api.

Finally, the LOVE_SENDER environment variable must be sent to a username, which
will be used as the sender of your love.

In future versions, these environment variables will most likely be replaced by
a configuration file. Also, in the future, hopefully user-specific API keys will
be available so that non-administrators can send love using the API.
*/
package main

import (
	"fmt"
	"github.com/hacsoc/golove/love"
	"os"
	"strings"
)

func main() {
	api_key := os.Getenv("LOVE_API_KEY")
	base_url := os.Getenv("LOVE_BASE_URL")
	sender := os.Getenv("LOVE_SENDER")
	fmt.Println(api_key)
	if len(os.Args) < 3 {
		fmt.Println("usage: golove recipient[,recipient] message")
		return
	}
	recipient := os.Args[1]
	message := strings.Join(os.Args[2:], " ")
	client := love.NewClient(api_key, base_url)
	err := client.SendLove(sender, recipient, message)
	if err != nil {
		fmt.Println(err)
	} else {
		fmt.Printf("Love sent to %s!", recipient)
	}
}
